# This is the CMakeCache file.
# For build in directory: c:/Users/45422/Desktop/newClone/orthanc/OrthancServer/out/build/x64-Debug
# It was generated by CMake: C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Allow CMake to download packages
ALLOW_DOWNLOADS:BOOL=OFF

//Back-end for locales that is used by Boost (can be "gcc", "libiconv",
// "icu", or "wconv" on Windows)
BOOST_LOCALE_BACKEND:STRING=libiconv

//Whether to build the ConnectivityChecks plugin
BUILD_CONNECTIVITY_CHECKS:BOOL=ON

//Whether to build the DelayedDeletion plugin
BUILD_DELAYED_DELETION:BOOL=ON

//Whether to build the Housekeeper plugin
BUILD_HOUSEKEEPER:BOOL=ON

//Whether to build the sample plugin to serve modality worklists
BUILD_MODALITY_WORKLISTS:BOOL=ON

//Whether to build the MultitenantDicom plugin
BUILD_MULTITENANT_DICOM:BOOL=ON

//Whether to build the companion tool to recover files compressed
// using Orthanc
BUILD_RECOVER_COMPRESSED_FILE:BOOL=ON

//Whether to build the ServeFolders plugin
BUILD_SERVE_FOLDERS:BOOL=ON

//Version of the OpenSSL API to be used in civetweb in static builds
// (can be "1.0" or "1.1"
CIVETWEB_OPENSSL_API:STRING=1.1

//Path to a program.
CMAKE_AR:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.41.34120/bin/Hostx64/x64/lib.exe

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:STRING=Debug

//No help, variable specified on the command line.
CMAKE_CXX_COMPILER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.41.34120/bin/Hostx64/x64/cl.exe

//compiler flags
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//No help, variable specified on the command line.
CMAKE_C_COMPILER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.41.34120/bin/Hostx64/x64/cl.exe

//compiler flags
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=C:/Users/45422/Desktop/newClone/orthanc/OrthancServer/out/build/x64-Debug/CMakeFiles/pkgRedirects

//No help, variable specified on the command line.
CMAKE_INSTALL_PREFIX:PATH=C:/Users/45422/Desktop/newClone/orthanc/OrthancServer/out/install/x64-Debug

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.41.34120/bin/Hostx64/x64/link.exe

//make program
CMAKE_MAKE_PROGRAM:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0/x64/mt.exe

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=Orthanc

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0/x64/rc.exe

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Directory containing the DCMTK dictionaries "dicom.dic" and "private.dic"
// (only when using system version of DCMTK)
DCMTK_DICTIONARY_DIR:PATH=

//Version of DCMTK to be used in static builds (can be "3.6.0",
// "3.6.2", "3.6.4", "3.6.5", "3.6.6", "3.6.7", or "3.6.8")
DCMTK_STATIC_VERSION:STRING=3.6.8

//Sets the target mode for Emscripten (can be "wasm" or "asm.js")
EMSCRIPTEN_TARGET_MODE:STRING=wasm

//Sets the trap mode for Emscripten for numeric errors (can notably
// be empty, or "clamp")
EMSCRIPTEN_TRAP_MODE:STRING=

//Use Civetweb instead of Mongoose (Mongoose was the default embedded
// HTTP server in Orthanc <= 1.5.1)
ENABLE_CIVETWEB:BOOL=ON

//Enable JPEG-LS (Lossless) decompression
ENABLE_DCMTK_JPEG:BOOL=ON

//Enable JPEG-LS (Lossless) decompression
ENABLE_DCMTK_JPEG_LOSSLESS:BOOL=ON

//Enable logging internal to DCMTK
ENABLE_DCMTK_LOG:BOOL=ON

//Enable support for loading external Lua modules (only meaningful
// if using static version of the Lua engine)
ENABLE_LUA_MODULES:BOOL=OFF

//Enable PKCS#11 for HTTPS client authentication using hardware
// security modules and smart cards
ENABLE_PKCS11:BOOL=OFF

//Enable plugins
ENABLE_PLUGINS:BOOL=ON

//Whether to enable the generation of profiling information with
// gprof
ENABLE_PROFILING:BOOL=OFF

//Include support for SSL
ENABLE_SSL:BOOL=ON

//Add the /MP option to build with multiple processes if using
// Visual Studio
MSVC_MULTIPLE_PROCESSES:BOOL=OFF

//Version of OpenSSL to be used in static builds (can be "1.1.1"
// or "3.0")
OPENSSL_STATIC_VERSION:STRING=3.0

//Force the version of Lua to be used by Orthanc (for instance
// "5.3"), if empty, this will be autodetected
ORTHANC_LUA_VERSION:STRING=

//Value Computed by CMake
Orthanc_BINARY_DIR:STATIC=C:/Users/45422/Desktop/newClone/orthanc/OrthancServer/out/build/x64-Debug

//Value Computed by CMake
Orthanc_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
Orthanc_SOURCE_DIR:STATIC=C:/Users/45422/Desktop/newClone/orthanc/OrthancServer

//Path to a program.
PYTHON_EXECUTABLE:FILEPATH=C:/Users/45422/AppData/Local/Programs/Python/Python311/python.exe

//Standalone build (all the resources are embedded, necessary for
// releases)
STANDALONE_BUILD:BOOL=ON

//Static build of the third-party libraries (necessary for Windows)
STATIC_BUILD:BOOL=OFF

//The system version of Mongoose uses callbacks (version >= 3.7)
SYSTEM_MONGOOSE_USE_CALLBACKS:BOOL=ON

//Allow unit tests to make HTTP requests
UNIT_TESTS_WITH_HTTP_CONNEXIONS:BOOL=ON

//Use the dictionary of private tags from DCMTK 3.6.2 if using
// DCMTK 3.6.0
USE_DCMTK_362_PRIVATE_DIC:BOOL=ON

//Use the sources of Google Test shipped with libgtest-dev (Debian
// only)
USE_GOOGLE_TEST_DEBIAN_PACKAGE:BOOL=OFF

//Use boost 1.69.0, latest version to be compatible with LSB
USE_LEGACY_BOOST:BOOL=OFF

//Use the old branch 0.x.y of JsonCpp, that does not require a
// C++11 compiler (for LSB and old versions of Visual Studio)
USE_LEGACY_JSONCPP:BOOL=OFF

//Use icu icu4c-58_2, latest version not requiring a C++11 compiler
// (for LSB and old versions of Visual Studio)
USE_LEGACY_LIBICU:BOOL=OFF

//Use the Pugixml parser (turn off only for debug)
USE_PUGIXML:BOOL=ON

//Use the system version of Boost
USE_SYSTEM_BOOST:BOOL=ON

//Use the system version of Civetweb (experimental)
USE_SYSTEM_CIVETWEB:BOOL=ON

//Use the system version of LibCurl
USE_SYSTEM_CURL:BOOL=ON

//Use the system version of DCMTK
USE_SYSTEM_DCMTK:BOOL=ON

//Use the system version of Google Test
USE_SYSTEM_GOOGLE_TEST:BOOL=ON

//Use the system version of JsonCpp
USE_SYSTEM_JSONCPP:BOOL=ON

//Use the system version of libiconv
USE_SYSTEM_LIBICONV:BOOL=ON

//Use the system version of libicu
USE_SYSTEM_LIBICU:BOOL=ON

//Use the system version of libjpeg
USE_SYSTEM_LIBJPEG:BOOL=ON

//Use the system version of libp11 (PKCS#11 wrapper library)
USE_SYSTEM_LIBP11:BOOL=OFF

//Use the system version of libpng
USE_SYSTEM_LIBPNG:BOOL=ON

//Use the system version of Lua
USE_SYSTEM_LUA:BOOL=ON

//Use the system version of Mongoose
USE_SYSTEM_MONGOOSE:BOOL=ON

//Use the system version of OpenSSL
USE_SYSTEM_OPENSSL:BOOL=ON

//Use the system version of Google Protocol Buffers
USE_SYSTEM_PROTOBUF:BOOL=ON

//Use the system version of Pugixml
USE_SYSTEM_PUGIXML:BOOL=ON

//Use the system version of SQLite
USE_SYSTEM_SQLITE:BOOL=ON

//Use the system version of the uuid library from e2fsprogs
USE_SYSTEM_UUID:BOOL=ON

//Use the system version of ZLib
USE_SYSTEM_ZLIB:BOOL=ON

//Path to a program.
ZIP_EXECUTABLE:FILEPATH=C:/Program Files/7-Zip/7z.exe


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CIVETWEB_OPENSSL_API
CIVETWEB_OPENSSL_API-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/45422/Desktop/newClone/orthanc/OrthancServer/out/build/x64-Debug
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=29
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=5
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/45422/Desktop/newClone/orthanc/OrthancServer
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.29
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Path to the EmbedResources.py script from Orthanc
EMBED_RESOURCES_PYTHON:INTERNAL=C:/Users/45422/Desktop/newClone/orthanc/OrthancFramework/Resources/CMake/../EmbedResources.py
//ADVANCED property for variable: EMSCRIPTEN_TARGET_MODE
EMSCRIPTEN_TARGET_MODE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: EMSCRIPTEN_TRAP_MODE
EMSCRIPTEN_TRAP_MODE-ADVANCED:INTERNAL=1
//Show options related to cryptography
ENABLE_CRYPTO_OPTIONS:INTERNAL=OFF
//Enable DCMTK
ENABLE_DCMTK:INTERNAL=OFF
//Enable DICOM networking in DCMTK
ENABLE_DCMTK_NETWORKING:INTERNAL=OFF
//Enable DICOM transcoding in DCMTK
ENABLE_DCMTK_TRANSCODING:INTERNAL=OFF
//Enable support of Google Test
ENABLE_GOOGLE_TEST:INTERNAL=OFF
//Enable support of JPEG
ENABLE_JPEG:INTERNAL=OFF
//Enable support for locales (notably in Boost)
ENABLE_LOCALE:INTERNAL=OFF
//Enable support of Lua scripting
ENABLE_LUA:INTERNAL=OFF
//Enable module for DICOM handling
ENABLE_MODULE_DICOM:INTERNAL=ON
//Enable module for image processing
ENABLE_MODULE_IMAGES:INTERNAL=ON
//Enable module for jobs
ENABLE_MODULE_JOBS:INTERNAL=ON
//Enable support of engines in OpenSSL
ENABLE_OPENSSL_ENGINES:INTERNAL=OFF
//Enable support of PNG
ENABLE_PNG:INTERNAL=OFF
//Enable support for Google Protocol Buffers' library
ENABLE_PROTOBUF:INTERNAL=OFF
//Enable support for Google Protocol Buffers' compiler
ENABLE_PROTOBUF_COMPILER:INTERNAL=OFF
//Enable support of XML through Pugixml
ENABLE_PUGIXML:INTERNAL=OFF
//Enable support of SQLite databases
ENABLE_SQLITE:INTERNAL=OFF
//Enable Web client
ENABLE_WEB_CLIENT:INTERNAL=OFF
//Enable embedded Web server
ENABLE_WEB_SERVER:INTERNAL=OFF
//Enable support of zlib
ENABLE_ZLIB:INTERNAL=OFF
//Details about finding PythonInterp
FIND_PACKAGE_MESSAGE_DETAILS_PythonInterp:INTERNAL=[C:/Users/45422/AppData/Local/Programs/Python/Python311/python.exe][v3.11.7()]
//Have include sqlite3.h
HAVE_SQLITE_H:INTERNAL=
//Whether we are in the process of building the Orthanc Framework
// shared library
ORTHANC_BUILDING_FRAMEWORK_LIBRARY:INTERNAL=OFF
//Whether Orthanc runs inside a sandboxed environment (such as
// Google NaCl or WebAssembly)
ORTHANC_SANDBOXED:INTERNAL=OFF
//ADVANCED property for variable: PYTHON_EXECUTABLE
PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SYSTEM_MONGOOSE_USE_CALLBACKS
SYSTEM_MONGOOSE_USE_CALLBACKS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_DCMTK_362_PRIVATE_DIC
USE_DCMTK_362_PRIVATE_DIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_GOOGLE_TEST_DEBIAN_PACKAGE
USE_GOOGLE_TEST_DEBIAN_PACKAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_PUGIXML
USE_PUGIXML-ADVANCED:INTERNAL=1

